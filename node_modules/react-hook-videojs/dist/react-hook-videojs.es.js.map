{"version":3,"file":"react-hook-videojs.es.js","sources":["../src/index.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useState,\n  useLayoutEffect,\n  useCallback,\n  forwardRef,\n  HTMLProps,\n  MutableRefObject,\n} from \"react\";\nimport videojs, { VideoJsPlayer, VideoJsPlayerOptions } from \"video.js\";\nimport cloneDeep from \"lodash.clonedeep\";\nimport { dequal } from \"dequal\";\n\n// Function copied from\n// https://github.com/kentcdodds/use-deep-compare-effect/blob/main/src/index.ts\nfunction useDeepCompareMemoize<T>(value: T): T {\n  const ref = React.useRef<T>(value);\n  const signalRef = React.useRef<number>(0);\n\n  if (!dequal(value, ref.current)) {\n    ref.current = value;\n    signalRef.current += 1;\n  }\n\n  return React.useMemo(() => ref.current, [signalRef.current]);\n}\n\n// Integrating React and video.js is a bit tricky, especially when supporting\n// React 18 strict mode. We'll do our best to explain what happens in inline comments.\n\nconst VideoJsWrapper = forwardRef<\n  VideoJsPlayer,\n  {\n    children: React.ReactNode;\n    videoJsOptions: VideoJsPlayerOptions;\n    onReady: () => void;\n    onDispose: () => void;\n    classNames: string;\n  }\n>(\n  (\n    { children, videoJsOptions, onReady, onDispose, classNames, ...props },\n    playerRef\n  ) => {\n    const player = playerRef as MutableRefObject<VideoJsPlayer | null>;\n    // video.js sometimes mutates the provided options object.\n    // We clone it to avoid mutation issues.\n    const videoJsOptionsCloned = cloneDeep(videoJsOptions);\n    const videoNode = useRef<HTMLVideoElement | null>(null);\n    const containerRef = useRef<HTMLDivElement | null>(null);\n\n    useLayoutEffect(() => {\n      if (!videoNode.current?.parentNode) return;\n\n      // Once we initialize the player, videojs will start mutating the DOM.\n      // We need a snapshot of the state just before, so we know what state\n      // to reset the DOM to.\n      const originalVideoNodeParent =\n        videoNode.current.parentNode.cloneNode(true);\n\n      if (!player.current) {\n        player.current = videojs(videoNode.current, videoJsOptionsCloned);\n        player.current.ready(() => {\n          onReady();\n        });\n      }\n\n      return (): void => {\n        // Whenever something changes in the options object, we\n        // want to reinitialize video.js, and destroy the old player by calling `player.current.dispose()`\n\n        if (player.current) {\n          player.current.dispose();\n\n          // Unfortunately, video.js heavily mutates the DOM in a way that React doesn't\n          // like, so we need to readd the removed DOM elements directly after dispose.\n          // More concretely, the node marked with `data-vjs-player` will be removed from the\n          // DOM. We are readding the cloned original video node parent as it was when React first rendered it,\n          // so it is once again synchronized with React.\n          if (\n            containerRef.current &&\n            videoNode.current?.parentNode &&\n            !containerRef.current.contains(videoNode.current.parentNode)\n          ) {\n            containerRef.current.appendChild(originalVideoNodeParent);\n            videoNode.current =\n              originalVideoNodeParent.firstChild as HTMLVideoElement;\n          }\n\n          player.current = null;\n          onDispose();\n        }\n      };\n\n      // We'll use the serialized videoJsOptions object as a dependency object\n    }, [useDeepCompareMemoize(videoJsOptions)]);\n\n    return (\n      // TODO: can we get by withour introducing an extra div?\n      <div ref={containerRef}>\n        <div data-vjs-player>\n          <video\n            ref={videoNode}\n            className={`video-js ${classNames}`}\n            {...props}\n          >\n            {children}\n          </video>\n        </div>\n      </div>\n    );\n  }\n);\n\nVideoJsWrapper.displayName = \"VideoJsWrapper\";\n\ntype VideoProps = {\n  children?: React.ReactNode;\n} & Partial<HTMLProps<HTMLVideoElement>>;\n\ntype VideoType = (props: VideoProps) => JSX.Element;\n\nexport const useVideoJS = (\n  videoJsOptions: VideoJsPlayerOptions,\n  classNames = \"\"\n): {\n  Video: VideoType;\n  ready: boolean;\n  player: VideoJsPlayer | null;\n} => {\n  const [ready, setReady] = useState(false);\n\n  // player will contain the video.js player object, once it is ready.\n  const player = useRef<VideoJsPlayer>(null);\n  const Video = useCallback(\n    ({ children, ...props }: VideoProps) => (\n      <VideoJsWrapper\n        videoJsOptions={videoJsOptions}\n        classNames={classNames}\n        onReady={(): void => setReady(true)}\n        onDispose={(): void => setReady(false)}\n        {...props}\n        ref={player}\n      >\n        {children}\n      </VideoJsWrapper>\n    ),\n    [useDeepCompareMemoize(videoJsOptions), classNames]\n  );\n\n  return { Video, ready, player: player.current };\n};\n"],"names":[],"mappings":";;;;AAeA,+BAAkC,OAAa;AACvC,QAAA,MAAM,MAAM,OAAU,KAAK;AAC3B,QAAA,YAAY,MAAM,OAAe,CAAC;AAExC,MAAI,CAAC,OAAO,OAAO,IAAI,OAAO,GAAG;AAC/B,QAAI,UAAU;AACd,cAAU,WAAW;AAAA,EACvB;AAEO,SAAA,MAAM,QAAQ,MAAM,IAAI,SAAS,CAAC,UAAU,OAAO,CAAC;AAC7D;AAKA,MAAM,iBAAiB,WAUrB,CACE,EAAE,UAAU,gBAAgB,SAAS,WAAW,eAAe,SAC/D,cACG;AACH,QAAM,SAAS;AAGT,QAAA,uBAAuB,UAAU,cAAc;AAC/C,QAAA,YAAY,OAAgC,IAAI;AAChD,QAAA,eAAe,OAA8B,IAAI;AAEvD,kBAAgB,MAAM;;AAChB,QAAA,CAAC,iBAAU,YAAV,mBAAmB;AAAY;AAKpC,UAAM,0BACJ,UAAU,QAAQ,WAAW,UAAU,IAAI;AAEzC,QAAA,CAAC,OAAO,SAAS;AACnB,aAAO,UAAU,QAAQ,UAAU,SAAS,oBAAoB;AACzD,aAAA,QAAQ,MAAM,MAAM;AACjB;MAAA,CACT;AAAA,IACH;AAEA,WAAO,MAAY;;AAIjB,UAAI,OAAO,SAAS;AAClB,eAAO,QAAQ;AAOf,YACE,aAAa,WACb,kBAAU,YAAV,oBAAmB,eACnB,CAAC,aAAa,QAAQ,SAAS,UAAU,QAAQ,UAAU,GAC3D;AACa,uBAAA,QAAQ,YAAY,uBAAuB;AACxD,oBAAU,UACR,wBAAwB;AAAA,QAC5B;AAEA,eAAO,UAAU;AACP;MACZ;AAAA,IAAA;AAAA,EAID,GAAA,CAAC,sBAAsB,cAAc,CAAC,CAAC;AAE1C,SAEG,sBAAA,cAAA,OAAA;AAAA,IAAI,KAAK;AAAA,EAAA,GACP,sBAAA,cAAA,OAAA;AAAA,IAAI,mBAAe;AAAA,EAAA,GACjB,sBAAA,cAAA,SAAA;AAAA,IACC,KAAK;AAAA,IACL,WAAW,YAAY;AAAA,IACtB,GAAG;AAAA,EAAA,GAEH,QACH,CACF,CACF;AAEJ,CACF;AAEA,eAAe,cAAc;AAQtB,MAAM,aAAa,CACxB,gBACA,aAAa,OAKV;AACH,QAAM,CAAC,OAAO,YAAY,SAAS,KAAK;AAGlC,QAAA,SAAS,OAAsB,IAAI;AACzC,QAAM,QAAQ,YACZ,CAAC,EAAE,aAAa,YACb,sBAAA,cAAA,gBAAA;AAAA,IACC;AAAA,IACA;AAAA,IACA,SAAS,MAAY,SAAS,IAAI;AAAA,IAClC,WAAW,MAAY,SAAS,KAAK;AAAA,IACpC,GAAG;AAAA,IACJ,KAAK;AAAA,EAAA,GAEJ,QACH,GAEF,CAAC,sBAAsB,cAAc,GAAG,UAAU,CACpD;AAEA,SAAO,EAAE,OAAO,OAAO,QAAQ,OAAO,QAAQ;AAChD;"}